head(dat)
data_dir = "~/wind_data/"
files = str_c(data_dir, dir(data_dir))
files = files[-grep("all", files)] # get rid of big one
files
for (f in files){
# Read in, label, and convert
dat = read.table(f, sep="\t")
names(dat) = c("Time", "RG1", "RG2", "RG3", "RG4","RG5", "RG6","AN1", "AN2")
for (k in 1:20){
# Grab random start
start = sample(length(dat[,1]),1)
end = start + 2100
# Melt it!
dat_long = melt(dat[start:end, ])
dat_long[,1] <- as.POSIXct(strptime(dat_long[,1], format="%Y/%m/%d %H:%M:%S"))
names(dat_long) = c("Time", "Sensor", "Speed")
# Make some sex rectangles
start_time = dat_long[1,1]
rect_left = start_time + dminutes(seq(0,30,10))
rectangles <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin = 0 ,
ymax = max(dat_long$Speed) + 0.25
)
# Sex colors
cols = c("#FF7F00", "#F781BF", "#377EB8", "#E41A1C", "#FFFF33", "#4DAF4A", "#A65628", "#984EA3")
image_file_name = str_c("~/projects/grant_work/images/",str_split(str_split(f, "/")[[1]][3], ".tsv")[[1]][1], k,".svg" )
p = ggplot() + geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=Speed, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(0,max(dat_long$Speed) + 0.25) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggsave(filename=image_file_name,  plot=p, width=8, height=5)
}
}
dat_long
dat_long$lagger = lag(dat_long$Speed)
head(dat_long)
lag
help(lag)
x = c(1,3,5,7,8)
lag(x)
z = lag(x)
z
str(z)
str(z)$tsp
unlist(z)
z = lag(ts(x))
z
diff(x)
dat_long$lagger = diff(dat_long$Speed)
dat_long$lagger = c(0, diff(dat_long$Speed))
head(dat_long)
source("~/multiplot.R")
p1 = ggplot() + geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=Speed, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(0,max(dat_long$Speed) + 0.25) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1
rectangles_lag <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin =  min(dat_long$lagger) - 0.02,
ymax = max(dat_long$lagger) + 0.02
)
p2 = ggplot() + geom_rect(data=rectangles_lag, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=lagger, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(min(dat_long$lagger) - 0.02,max(dat_long$lagger) + 0.05) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2
p2 = ggplot() + geom_rect(data=rectangles_lag, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=lagger, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(min(dat_long$lagger) - 0.02,max(dat_long$lagger) + 0.05) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
# Grab random start
start = sample(length(dat[,1]),1)
end = start + 2100
# Melt it!
dat_long = melt(dat[start:end, ])
dat_long[,1] <- as.POSIXct(strptime(dat_long[,1], format="%Y/%m/%d %H:%M:%S"))
names(dat_long) = c("Time", "Sensor", "Speed")
dat_long$lagger = c(0, diff(dat_long$Speed))
# Make some sex rectangles
start_time = dat_long[1,1]
rect_left = start_time + dminutes(seq(0,30,10))
rectangles <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin = 0 ,
ymax = max(dat_long$Speed) + 0.25
)
# Sex colors
cols = c("#FF7F00", "#F781BF", "#377EB8", "#E41A1C", "#FFFF33", "#4DAF4A", "#A65628", "#984EA3")
p1 = ggplot() + geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=Speed, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(0,max(dat_long$Speed) + 0.25) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
rectangles_lag <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin =  min(dat_long$lagger) - 0.02,
ymax = max(dat_long$lagger) + 0.02
)
p2 = ggplot() + geom_rect(data=rectangles_lag, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=lagger, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(min(dat_long$lagger) - 0.02,max(dat_long$lagger) + 0.05) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
# Grab random start
start = sample(length(dat[,1]),1)
end = start + 2100
# Melt it!
dat_long = melt(dat[start:end, ])
dat_long[,1] <- as.POSIXct(strptime(dat_long[,1], format="%Y/%m/%d %H:%M:%S"))
names(dat_long) = c("Time", "Sensor", "Speed")
dat_long$lagger = c(0, diff(dat_long$Speed))
# Make some sex rectangles
start_time = dat_long[1,1]
rect_left = start_time + dminutes(seq(0,30,10))
rectangles <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin = 0 ,
ymax = max(dat_long$Speed) + 0.25
)
# Sex colors
cols = c("#FF7F00", "#F781BF", "#377EB8", "#E41A1C", "#FFFF33", "#4DAF4A", "#A65628", "#984EA3")
p1 = ggplot() + geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=Speed, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(0,max(dat_long$Speed) + 0.25) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
rectangles_lag <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin =  min(dat_long$lagger) - 0.02,
ymax = max(dat_long$lagger) + 0.02
)
p2 = ggplot() + geom_rect(data=rectangles_lag, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=lagger, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(min(dat_long$lagger) - 0.02,max(dat_long$lagger) + 0.05) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
# Grab random start
start = sample(length(dat[,1]),1)
end = start + 2100
# Melt it!
dat_long = melt(dat[start:end, ])
dat_long[,1] <- as.POSIXct(strptime(dat_long[,1], format="%Y/%m/%d %H:%M:%S"))
names(dat_long) = c("Time", "Sensor", "Speed")
dat_long$lagger = c(0, diff(dat_long$Speed))
# Make some sex rectangles
start_time = dat_long[1,1]
rect_left = start_time + dminutes(seq(0,30,10))
rectangles <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin = 0 ,
ymax = max(dat_long$Speed) + 0.25
)
# Sex colors
cols = c("#FF7F00", "#F781BF", "#377EB8", "#E41A1C", "#FFFF33", "#4DAF4A", "#A65628", "#984EA3")
p1 = ggplot() + geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=Speed, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(0,max(dat_long$Speed) + 0.25) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
rectangles_lag <- data.frame(
xmin = rect_left,
xmax = rect_left + dminutes(5),
ymin =  min(dat_long$lagger) - 0.02,
ymax = max(dat_long$lagger) + 0.02
)
p2 = ggplot() + geom_rect(data=rectangles_lag, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=dat_long,aes(x=Time, y=lagger, colour=Sensor), size=1, alpha=.8) +
scale_colour_manual(values=cols) + theme_bw(22) + ylab("Speed (m/s)") + ggtitle("Wind Speeds for All Sensors") +
ylim(min(dat_long$lagger) - 0.02,max(dat_long$lagger) + 0.05) + theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
install.packages('KernSmooth')
library(KernSmooth)
test = dat[start:end, ]
head(test)
fit = locpoly(test[,1],test[,2])
test[,1] <- as.POSIXct(strptime(test[,1], format="%Y/%m/%d %H:%M:%S"))
fit = locpoly(test[,1],test[,2])
fit = locpoly(test[,1],test[,2], bandwidth=h)
h = dpill(dat[,1], dat[,2])
h = dpill(dat[,1], dat[,2], gridsize = 1000)
h = dpill(dat[,1], dat[,2], gridsize = 600)
fit = locpoly(test[,1],test[,2], bandwidth=h)
setwd("/home/andrew/Dropbox/pointing/")
ehh_vals = read.table("/home/andrew/projects/whats_the_point/data/xpehh_results.tsv", header=T, sep="\t")
head(ehh_vals)
load("/home/andrew/Dropbox/pointing/hits/.Rdata")
load("/home/andrew/Dropbox/pointing/hits/temp.RData")
ls()
head(dat)
head(pn)
head(pp)
library(ggplot2)
library(reshape)
setwd("/home/andrew/projects/whats_the_point/visualization/")
source('fst_functions.R')
pp = df_from_dir("/media/3C52A21052A1CF48/pointer_vs_pointer/")
pn = df_from_dir("/media/3C52A21052A1CF48/pointer_vs_non/")
pp = df_from_dir("/media/3C52A21052A1CF48/pointer_vs_pointer/")
pn = df_from_dir("/media/3C52A21052A1CF48/pointer_vs_non/")
diffs = pn[, 4:length(pn)] - pp[, 4:length(pp)]
all_avgs = apply(diffs, 1, function(x){return(mean(x, na.rm=T))})
head(all_avgs)
dat = cbind(pp[,1:3], all_avgs)
head(dat)
names(dat) = c("SNP", "CHR", "BP", "d_i")
head(dat)
write.csv(dat, "/home/andrew/projects/whats_the_point/data/adjusted_di_avgs.csv", row.names=F)
rm(list=ls(all=T))
ehh_vals = read.table("/home/andrew/projects/whats_the_point/data/xpehh_results.tsv", header=T, sep="\t", stringsAsFactors=F)
di_vals = read.csv("/home/andrew/projects/whats_the_point/data/adjusted_di_avgs.csv", stringsAsFactors=F)
head(di_vals)
head(ehh_vals)
hist(ehh_vals$XP.EHH)
hist(di_vals)
hist(di_vals$d_i)
hist(ehh_vals$XP.EHH)
head(ehh_vals)
head(di_vals)
mm = merge(ehh_vals, di_vals, by.x=1, by.y=1)
head(mm)
mm = mm[, -c(7,8)]
head(mm)
head(mm)
names(mm) = c("SNP", "CHR", "BP", "iHs_Pop_1", "iHs_Pop_2", "XP-EHH", "D(i)")
head(mm)
str(mm)
tenner = mm[mm$CHR == 10, ]
head(tenner)
source("~/multiplot.R")
head(tenner)
range(tenner$BP)
names(mm) = c("SNP", "CHR", "BP", "iHs_Pop_1", "iHs_Pop_2", "XP_EHH", "D_i")
tenner = mm[mm$CHR == 10, ]
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1) +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1) +  theme_bw(22) + ylab("XP-EHH") + ggtitle("XP-EHH Values\nChromosome 10") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1) +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
head(tenner)
range(tenner$BP)
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + ggtitle("XP-EHH Values\nChromosome 10") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#DDCC77") +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#F781BF") +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB8") +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
zommer = tenner[tenner$BP < 20000000, ]
head(zommer)
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
zommer = tenner[tenner$BP < 20000000, ]
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
zoomer = tenner[tenner$BP < 20000000, ]
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
multiplot(p1,p2)
di_pct = percentile(mm$D_i, .999)
di_pct = quantile(mm$D_i, .999)
di_pct
di_pct = quantile(mm$D_i, .9999)
di_pct
ehh_pct = quantile(mm$XP_EHH, .9999)
ehh_pct
p1 = p1 + geom_abline(slope=0, intercept=ehh_pct, col="red")
p1
di_pct = quantile(mm$D_i, .999)
ehh_pct = quantile(mm$XP_EHH, .999)
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1 = p1 + geom_abline(slope=0, intercept=ehh_pct, col="red", size=2)
p1
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=2)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=2)
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=2, alpha=0.8)
pq
p1
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=2, alpha=0.8)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=2, alpha=0.8)
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=tenner,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p2 = ggplot() + geom_line(data=tenner,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p2 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
multiplot(p1,p2)
p1 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p2 = ggplot() + geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
multiplot(p1,p2)
rect_left = seq(0, 18, 2)
rect_left
rect_left = seq(0, 18, 2) * 1000000
head(zoomer)
rect_left = seq(0, 18, 2) * 1000000
rectangles_ehh <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$XP_EHH) - 0.02,
ymax = max(zoomer$XP_EHH) + 0.02
)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
rect_left = seq(0, 18, 2) * 1000000
rectangles_ehh <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$XP_EHH) - 0.2,
ymax = max(zoomer$XP_EHH) + 0.2
)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
rect_left = seq(0, 18, 2) * 1000000
rectangles_ehh <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$XP_EHH) - 0.1,
ymax = max(zoomer$XP_EHH) + 0.2
)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
rect_left = seq(0, 18, 2) * 1000000
rectangles_ehh <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$XP_EHH),
ymax = max(zoomer$XP_EHH) + 0.2
)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.3) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") + ggtitle("XP-EHH Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
rect_left = seq(0, 18, 2) * 1000000
rectangles_di <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$D_i) - 5,
ymax = max(zoomer$D_i) + 15
)
p2 = ggplot()  + geom_rect(data=rectangles_di, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
p2
rect_left = seq(0, 18, 2) * 1000000
rectangles_di <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$D_i),
ymax = max(zoomer$D_i) + 15
)
p2 = ggplot()  + geom_rect(data=rectangles_di, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
p2
rect_left = seq(0, 18, 2) * 1000000
rectangles_di <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$D_i),
ymax = max(zoomer$D_i) + 10
)
p2 = ggplot()  + geom_rect(data=rectangles_di, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
p2
rect_left = seq(0, 18, 2) * 1000000
rectangles_di <- data.frame(
xmin = rect_left,
xmax = rect_left + 1000000,
ymin =  min(zoomer$D_i),
ymax = max(zoomer$D_i) + 15
)
p2 = ggplot()  + geom_rect(data=rectangles_di, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") + ggtitle("Adjusted D(i) Values") +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
p2
multiplot(p1,p2)
head(zoomer)
seq(0,20000000,500000)
seq(0,2000000,500000)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") +
ggtitle("XP-EHH Values") + scale_x_continuous(breaks=seq(0,20000000,5000000), labels=as.character(seq(0,20000000,5000000)))
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") +
ggtitle("XP-EHH Values") + scale_x_continuous(breaks=seq(0,20000000,5000000), labels=as.character(seq(0,20000000,5000000))) +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
seq(0,20000000,5000000)
as.character(seq(0,20000000,5000000))
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") +
ggtitle("XP-EHH Values") + scale_x_continuous(breaks=seq(0,20000000,5000000), labels=c("0", "5,000,000", "10,000,000", "15,000,000", "20,000,000")) +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p1
p1 = ggplot() + geom_rect(data=rectangles_ehh, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=XP_EHH), size=1.3, col="#117733") +  theme_bw(22) + ylab("XP-EHH") + xlab("Chr. 10 Base Position") +
ggtitle("XP-EHH Values") + scale_x_continuous(breaks=seq(0,20000000,5000000), labels=c("0", "5,000,000", "10,000,000", "15,000,000", "20,000,000")) +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=ehh_pct, col="red", size=1.5, alpha=0.8)
p2 = ggplot()  + geom_rect(data=rectangles_di, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='gray80', alpha=0.5) +
geom_line(data=zoomer,aes(x=BP, y=D_i), size=1, col="#377EB9") +  theme_bw(22) + ylab("D(i)") + xlab("Chr. 10 Base Position") +
ggtitle("Adjusted D(i) Values") + scale_x_continuous(breaks=seq(0,20000000,5000000), labels=c("0", "5,000,000", "10,000,000", "15,000,000", "20,000,000")) +
theme(panel.border = element_rect(colour = "black", size=2), axis.ticks = element_line(size=1.25),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_abline(slope=0, intercept=di_pct, col="red", size=1.5, alpha=0.8)
multiplot(p1,p2)
